name: MacOS Packaged.

on:
  workflow_dispatch:
  push:
    branches: ['**']
    tags: ['**']
  pull_request:
    branches: ['**']

jobs:
  macos:
    name: MacOS
    runs-on: macos-latest

    strategy:
      matrix:
        defines: [ "" ]

    env:
      GIT: "https://github.com"
      CMAKE_PREFIX_PATH: "/opt/homebrew/opt/ffmpeg@6:/opt/homebrew/opt/openal-soft"
      UPLOAD_ARTIFACT: "true"
      ONLY_CACHE: "false"
      MANUAL_CACHING: "1"
      AUTO_CACHING: "1"

    steps:
      - name: Get repository name.
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Clone.
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: ${{ env.REPO_NAME }}

      - name: First set up.
        run: |
          brew update
          brew upgrade || true
          brew install ada-url autoconf automake boost cmake ffmpeg@6 jpeg-xl libavif libheif libtool openal-soft openh264 openssl opus ninja pkg-config python qt yasm xz
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

          xcodebuild -version > CACHE_KEY.txt
          brew list --versions >> CACHE_KEY.txt
          echo $MANUAL_CACHING >> CACHE_KEY.txt
          echo "$GITHUB_WORKSPACE" >> CACHE_KEY.txt
          if [ "$AUTO_CACHING" = "1" ]; then
            thisFile=$REPO_NAME/.github/workflows/mac_packaged.yml
            md5 -q "$thisFile" >> CACHE_KEY.txt
          fi
          echo "CACHE_KEY=$(md5 -q CACHE_KEY.txt)" >> $GITHUB_ENV

          echo "MACOSX_DEPLOYMENT_TARGET=$(grep 'set(QT_SUPPORTED_MIN_MACOS_VERSION' /opt/homebrew/Cellar/qt/*/lib/cmake/Qt6/Qt6ConfigExtras.cmake | sed -E 's/^.*\"(.*)\"\)$/\1/')" >> $GITHUB_ENV
          echo "LibrariesPath=$(pwd)" >> $GITHUB_ENV

          curl -o tg_owt-version.json https://api.github.com/repos/desktop-app/tg_owt/git/refs/heads/master

      - name: RNNoise.
        run: |
          cd "$LibrariesPath"
          git clone --depth=1 https://gitlab.xiph.org/xiph/rnnoise.git
          cd rnnoise
          ./autogen.sh
          ./configure --disable-examples --disable-doc
          make -j"$(sysctl -n hw.logicalcpu)"
          sudo make install

      - name: WebRTC cache.
        id: cache-webrtc
        uses: actions/cache@v4
        with:
          path: ${{ env.LibrariesPath }}/tg_owt
          key: ${{ runner.OS }}-webrtc-${{ env.CACHE_KEY }}-${{ hashFiles('**/tg_owt-version.json') }}

      - name: WebRTC.
        if: steps.cache-webrtc.outputs.cache-hit != 'true'
        run: |
          cd "$LibrariesPath"
          git clone --depth=1 --recursive --shallow-submodules "$GIT/desktop-app/tg_owt.git"
          cd tg_owt
          cmake -B build -GNinja . \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS_DEBUG="" \
            -DCMAKE_CXX_FLAGS_DEBUG=""
          cmake --build build --parallel

      - name: TDE2E cache.
        id: cache-tde2e
        uses: actions/cache@v4
